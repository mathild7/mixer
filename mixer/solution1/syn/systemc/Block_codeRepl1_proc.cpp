// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_codeRepl1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_codeRepl1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_codeRepl1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state2 = "10";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state3 = "100";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state4 = "1000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state5 = "10000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state6 = "100000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> Block_codeRepl1_proc::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Block_codeRepl1_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Block_codeRepl1_proc::ap_const_lv1_1 = "1";
const sc_lv<2> Block_codeRepl1_proc::ap_const_lv2_0 = "00";
const sc_lv<2> Block_codeRepl1_proc::ap_const_lv2_2 = "10";
const sc_lv<2> Block_codeRepl1_proc::ap_const_lv2_3 = "11";
const sc_lv<2> Block_codeRepl1_proc::ap_const_lv2_1 = "1";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_6 = "110";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_15 = "10101";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_16 = "10110";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_10 = "10000";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_1 = "1";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_3 = "11";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_5 = "101";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_7 = "111";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_B = "1011";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_C = "1100";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_11 = "10001";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_BD4CCCCD = "10111101010011001100110011001101";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_3D4CCCCD = "111101010011001100110011001101";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_1E = "11110";
const sc_lv<8> Block_codeRepl1_proc::ap_const_lv8_FF = "11111111";
const sc_lv<23> Block_codeRepl1_proc::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_D = "1101";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_E = "1110";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_F = "1111";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_12 = "10010";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_13 = "10011";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_14 = "10100";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_9 = "1001";
const sc_lv<32> Block_codeRepl1_proc::ap_const_lv32_A = "1010";
const sc_lv<5> Block_codeRepl1_proc::ap_const_lv5_4 = "100";
const sc_lv<5> Block_codeRepl1_proc::ap_const_lv5_2 = "10";
const bool Block_codeRepl1_proc::ap_const_boolean_1 = true;

Block_codeRepl1_proc::Block_codeRepl1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mixer_fadd_32ns_3bkb_U1 = new mixer_fadd_32ns_3bkb<1,5,32,32,32>("mixer_fadd_32ns_3bkb_U1");
    mixer_fadd_32ns_3bkb_U1->clk(ap_clk);
    mixer_fadd_32ns_3bkb_U1->reset(ap_rst);
    mixer_fadd_32ns_3bkb_U1->din0(grp_fu_156_p0);
    mixer_fadd_32ns_3bkb_U1->din1(grp_fu_156_p1);
    mixer_fadd_32ns_3bkb_U1->ce(grp_fu_156_ce);
    mixer_fadd_32ns_3bkb_U1->dout(grp_fu_156_p2);
    mixer_fadd_32ns_3bkb_U2 = new mixer_fadd_32ns_3bkb<1,5,32,32,32>("mixer_fadd_32ns_3bkb_U2");
    mixer_fadd_32ns_3bkb_U2->clk(ap_clk);
    mixer_fadd_32ns_3bkb_U2->reset(ap_rst);
    mixer_fadd_32ns_3bkb_U2->din0(tmp_18_reg_494);
    mixer_fadd_32ns_3bkb_U2->din1(tmp_19_reg_499);
    mixer_fadd_32ns_3bkb_U2->ce(ap_var_for_const0);
    mixer_fadd_32ns_3bkb_U2->dout(grp_fu_160_p2);
    mixer_fmul_32ns_3cud_U3 = new mixer_fmul_32ns_3cud<1,4,32,32,32>("mixer_fmul_32ns_3cud_U3");
    mixer_fmul_32ns_3cud_U3->clk(ap_clk);
    mixer_fmul_32ns_3cud_U3->reset(ap_rst);
    mixer_fmul_32ns_3cud_U3->din0(tmp_7_reg_107);
    mixer_fmul_32ns_3cud_U3->din1(lev0);
    mixer_fmul_32ns_3cud_U3->ce(grp_fu_165_ce);
    mixer_fmul_32ns_3cud_U3->dout(grp_fu_165_p2);
    mixer_fmul_32ns_3cud_U4 = new mixer_fmul_32ns_3cud<1,4,32,32,32>("mixer_fmul_32ns_3cud_U4");
    mixer_fmul_32ns_3cud_U4->clk(ap_clk);
    mixer_fmul_32ns_3cud_U4->reset(ap_rst);
    mixer_fmul_32ns_3cud_U4->din0(tmp_s_reg_119);
    mixer_fmul_32ns_3cud_U4->din1(lev1);
    mixer_fmul_32ns_3cud_U4->ce(grp_fu_170_ce);
    mixer_fmul_32ns_3cud_U4->dout(grp_fu_170_p2);
    mixer_fmul_32ns_3cud_U5 = new mixer_fmul_32ns_3cud<1,4,32,32,32>("mixer_fmul_32ns_3cud_U5");
    mixer_fmul_32ns_3cud_U5->clk(ap_clk);
    mixer_fmul_32ns_3cud_U5->reset(ap_rst);
    mixer_fmul_32ns_3cud_U5->din0(tmp_10_reg_131);
    mixer_fmul_32ns_3cud_U5->din1(lev2);
    mixer_fmul_32ns_3cud_U5->ce(grp_fu_175_ce);
    mixer_fmul_32ns_3cud_U5->dout(grp_fu_175_p2);
    mixer_fmul_32ns_3cud_U6 = new mixer_fmul_32ns_3cud<1,4,32,32,32>("mixer_fmul_32ns_3cud_U6");
    mixer_fmul_32ns_3cud_U6->clk(ap_clk);
    mixer_fmul_32ns_3cud_U6->reset(ap_rst);
    mixer_fmul_32ns_3cud_U6->din0(tmp_14_phi_fu_147_p4);
    mixer_fmul_32ns_3cud_U6->din1(lev3);
    mixer_fmul_32ns_3cud_U6->ce(grp_fu_180_ce);
    mixer_fmul_32ns_3cud_U6->dout(grp_fu_180_p2);
    mixer_fcmp_32ns_3dEe_U7 = new mixer_fcmp_32ns_3dEe<1,1,32,32,1>("mixer_fcmp_32ns_3dEe_U7");
    mixer_fcmp_32ns_3dEe_U7->din0(grp_fu_185_p0);
    mixer_fcmp_32ns_3dEe_U7->din1(ap_var_for_const1);
    mixer_fcmp_32ns_3dEe_U7->opcode(ap_var_for_const2);
    mixer_fcmp_32ns_3dEe_U7->dout(grp_fu_185_p2);
    mixer_fcmp_32ns_3dEe_U8 = new mixer_fcmp_32ns_3dEe<1,1,32,32,1>("mixer_fcmp_32ns_3dEe_U8");
    mixer_fcmp_32ns_3dEe_U8->din0(grp_fu_191_p0);
    mixer_fcmp_32ns_3dEe_U8->din1(ap_var_for_const3);
    mixer_fcmp_32ns_3dEe_U8->opcode(ap_var_for_const4);
    mixer_fcmp_32ns_3dEe_U8->dout(grp_fu_191_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( in0_V_0_vld_out );
    sensitive << ( or_cond_reg_423 );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( in1_V_0_vld_out );
    sensitive << ( or_cond1_reg_442 );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( in2_V_0_vld_out );
    sensitive << ( or_cond2_reg_461 );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( or_cond3_reg_480 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_fu_156_ce);
    sensitive << ( out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_156_p0);
    sensitive << ( reg_197 );
    sensitive << ( tmp_15_reg_484 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_156_p1);
    sensitive << ( tmp_16_reg_489 );
    sensitive << ( tmp_20_reg_504 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_165_ce);
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_170_ce);
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_175_ce);
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_180_ce);
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_185_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( lev0 );
    sensitive << ( lev1 );
    sensitive << ( lev2 );
    sensitive << ( lev3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_191_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( lev0 );
    sensitive << ( lev1 );
    sensitive << ( lev2 );
    sensitive << ( lev3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_in0_V_0_ack_in);
    sensitive << ( in0_V_0_state );

    SC_METHOD(thread_in0_V_0_ack_out);
    sensitive << ( in0_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_reg_423 );

    SC_METHOD(thread_in0_V_0_data_out);
    sensitive << ( in0_V_0_payload_A );
    sensitive << ( in0_V_0_payload_B );
    sensitive << ( in0_V_0_sel );

    SC_METHOD(thread_in0_V_0_load_A);
    sensitive << ( in0_V_0_sel_wr );
    sensitive << ( in0_V_0_state_cmp_full );

    SC_METHOD(thread_in0_V_0_load_B);
    sensitive << ( in0_V_0_sel_wr );
    sensitive << ( in0_V_0_state_cmp_full );

    SC_METHOD(thread_in0_V_0_sel);
    sensitive << ( in0_V_0_sel_rd );

    SC_METHOD(thread_in0_V_0_state_cmp_full);
    sensitive << ( in0_V_0_state );

    SC_METHOD(thread_in0_V_0_vld_in);
    sensitive << ( in0_V_TVALID );

    SC_METHOD(thread_in0_V_0_vld_out);
    sensitive << ( in0_V_0_state );

    SC_METHOD(thread_in0_V_TDATA_blk_n);
    sensitive << ( in0_V_0_state );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_reg_423 );

    SC_METHOD(thread_in0_V_TREADY);
    sensitive << ( in0_V_0_state );

    SC_METHOD(thread_in1_V_0_ack_in);
    sensitive << ( in1_V_0_state );

    SC_METHOD(thread_in1_V_0_ack_out);
    sensitive << ( in1_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( or_cond1_reg_442 );

    SC_METHOD(thread_in1_V_0_data_out);
    sensitive << ( in1_V_0_payload_A );
    sensitive << ( in1_V_0_payload_B );
    sensitive << ( in1_V_0_sel );

    SC_METHOD(thread_in1_V_0_load_A);
    sensitive << ( in1_V_0_sel_wr );
    sensitive << ( in1_V_0_state_cmp_full );

    SC_METHOD(thread_in1_V_0_load_B);
    sensitive << ( in1_V_0_sel_wr );
    sensitive << ( in1_V_0_state_cmp_full );

    SC_METHOD(thread_in1_V_0_sel);
    sensitive << ( in1_V_0_sel_rd );

    SC_METHOD(thread_in1_V_0_state_cmp_full);
    sensitive << ( in1_V_0_state );

    SC_METHOD(thread_in1_V_0_vld_in);
    sensitive << ( in1_V_TVALID );

    SC_METHOD(thread_in1_V_0_vld_out);
    sensitive << ( in1_V_0_state );

    SC_METHOD(thread_in1_V_TDATA_blk_n);
    sensitive << ( in1_V_0_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( or_cond1_reg_442 );

    SC_METHOD(thread_in1_V_TREADY);
    sensitive << ( in1_V_0_state );

    SC_METHOD(thread_in2_V_0_ack_in);
    sensitive << ( in2_V_0_state );

    SC_METHOD(thread_in2_V_0_ack_out);
    sensitive << ( in2_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_cond2_reg_461 );

    SC_METHOD(thread_in2_V_0_data_out);
    sensitive << ( in2_V_0_payload_A );
    sensitive << ( in2_V_0_payload_B );
    sensitive << ( in2_V_0_sel );

    SC_METHOD(thread_in2_V_0_load_A);
    sensitive << ( in2_V_0_sel_wr );
    sensitive << ( in2_V_0_state_cmp_full );

    SC_METHOD(thread_in2_V_0_load_B);
    sensitive << ( in2_V_0_sel_wr );
    sensitive << ( in2_V_0_state_cmp_full );

    SC_METHOD(thread_in2_V_0_sel);
    sensitive << ( in2_V_0_sel_rd );

    SC_METHOD(thread_in2_V_0_state_cmp_full);
    sensitive << ( in2_V_0_state );

    SC_METHOD(thread_in2_V_0_vld_in);
    sensitive << ( in2_V_TVALID );

    SC_METHOD(thread_in2_V_0_vld_out);
    sensitive << ( in2_V_0_state );

    SC_METHOD(thread_in2_V_TDATA_blk_n);
    sensitive << ( in2_V_0_state );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_cond2_reg_461 );

    SC_METHOD(thread_in2_V_TREADY);
    sensitive << ( in2_V_0_state );

    SC_METHOD(thread_in3_V_0_ack_in);
    sensitive << ( in3_V_0_state );

    SC_METHOD(thread_in3_V_0_ack_out);
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );

    SC_METHOD(thread_in3_V_0_data_out);
    sensitive << ( in3_V_0_payload_A );
    sensitive << ( in3_V_0_payload_B );
    sensitive << ( in3_V_0_sel );

    SC_METHOD(thread_in3_V_0_load_A);
    sensitive << ( in3_V_0_sel_wr );
    sensitive << ( in3_V_0_state_cmp_full );

    SC_METHOD(thread_in3_V_0_load_B);
    sensitive << ( in3_V_0_sel_wr );
    sensitive << ( in3_V_0_state_cmp_full );

    SC_METHOD(thread_in3_V_0_sel);
    sensitive << ( in3_V_0_sel_rd );

    SC_METHOD(thread_in3_V_0_state_cmp_full);
    sensitive << ( in3_V_0_state );

    SC_METHOD(thread_in3_V_0_vld_in);
    sensitive << ( in3_V_TVALID );

    SC_METHOD(thread_in3_V_0_vld_out);
    sensitive << ( in3_V_0_state );

    SC_METHOD(thread_in3_V_TDATA_blk_n);
    sensitive << ( in3_V_0_state );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );

    SC_METHOD(thread_in3_V_TREADY);
    sensitive << ( in3_V_0_state );

    SC_METHOD(thread_lev0_to_int_fu_203_p1);
    sensitive << ( lev0 );

    SC_METHOD(thread_lev1_to_int_fu_248_p1);
    sensitive << ( lev1 );

    SC_METHOD(thread_lev2_to_int_fu_293_p1);
    sensitive << ( lev2 );

    SC_METHOD(thread_lev3_to_int_fu_338_p1);
    sensitive << ( lev3 );

    SC_METHOD(thread_notlhs2_fu_265_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_fu_251_p4 );

    SC_METHOD(thread_notlhs4_fu_310_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_23_fu_296_p4 );

    SC_METHOD(thread_notlhs6_fu_355_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_30_fu_341_p4 );

    SC_METHOD(thread_notlhs_fu_220_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_5_fu_206_p4 );

    SC_METHOD(thread_notrhs2_fu_271_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_fu_261_p1 );

    SC_METHOD(thread_notrhs4_fu_316_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_24_fu_306_p1 );

    SC_METHOD(thread_notrhs6_fu_361_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_31_fu_351_p1 );

    SC_METHOD(thread_notrhs_fu_226_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_216_p1 );

    SC_METHOD(thread_or_cond1_fu_287_p2);
    sensitive << ( tmp_11_fu_277_p2 );
    sensitive << ( tmp_21_fu_283_p2 );

    SC_METHOD(thread_or_cond2_fu_332_p2);
    sensitive << ( tmp_25_fu_322_p2 );
    sensitive << ( tmp_28_fu_328_p2 );

    SC_METHOD(thread_or_cond3_fu_377_p2);
    sensitive << ( tmp_32_fu_367_p2 );
    sensitive << ( tmp_35_fu_373_p2 );

    SC_METHOD(thread_or_cond_fu_242_p2);
    sensitive << ( tmp_8_fu_232_p2 );
    sensitive << ( tmp_2_fu_238_p2 );

    SC_METHOD(thread_out_V_1_ack_in);
    sensitive << ( out_V_1_state );

    SC_METHOD(thread_out_V_1_ack_out);
    sensitive << ( out_V_TREADY );

    SC_METHOD(thread_out_V_1_data_out);
    sensitive << ( out_V_1_payload_A );
    sensitive << ( out_V_1_payload_B );
    sensitive << ( out_V_1_sel );

    SC_METHOD(thread_out_V_1_load_A);
    sensitive << ( out_V_1_sel_wr );
    sensitive << ( out_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_1_load_B);
    sensitive << ( out_V_1_sel_wr );
    sensitive << ( out_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_1_sel);
    sensitive << ( out_V_1_sel_rd );

    SC_METHOD(thread_out_V_1_state_cmp_full);
    sensitive << ( out_V_1_state );

    SC_METHOD(thread_out_V_1_vld_in);
    sensitive << ( out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_out_V_1_vld_out);
    sensitive << ( out_V_1_state );

    SC_METHOD(thread_out_V_TDATA);
    sensitive << ( out_V_1_data_out );

    SC_METHOD(thread_out_V_TDATA_blk_n);
    sensitive << ( out_V_1_state );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_out_V_TVALID);
    sensitive << ( out_V_1_state );

    SC_METHOD(thread_tmp_11_fu_277_p2);
    sensitive << ( notrhs2_fu_271_p2 );
    sensitive << ( notlhs2_fu_265_p2 );

    SC_METHOD(thread_tmp_14_phi_fu_147_p4);
    sensitive << ( in3_V_0_data_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );
    sensitive << ( tmp_14_reg_143 );

    SC_METHOD(thread_tmp_21_fu_283_p2);
    sensitive << ( tmp_12_reg_432 );
    sensitive << ( tmp_13_reg_437 );

    SC_METHOD(thread_tmp_23_fu_296_p4);
    sensitive << ( lev2_to_int_fu_293_p1 );

    SC_METHOD(thread_tmp_24_fu_306_p1);
    sensitive << ( lev2_to_int_fu_293_p1 );

    SC_METHOD(thread_tmp_25_fu_322_p2);
    sensitive << ( notrhs4_fu_316_p2 );
    sensitive << ( notlhs4_fu_310_p2 );

    SC_METHOD(thread_tmp_28_fu_328_p2);
    sensitive << ( tmp_26_reg_451 );
    sensitive << ( tmp_27_reg_456 );

    SC_METHOD(thread_tmp_2_fu_238_p2);
    sensitive << ( tmp_9_reg_389 );
    sensitive << ( tmp_1_reg_394 );

    SC_METHOD(thread_tmp_30_fu_341_p4);
    sensitive << ( lev3_to_int_fu_338_p1 );

    SC_METHOD(thread_tmp_31_fu_351_p1);
    sensitive << ( lev3_to_int_fu_338_p1 );

    SC_METHOD(thread_tmp_32_fu_367_p2);
    sensitive << ( notrhs6_fu_361_p2 );
    sensitive << ( notlhs6_fu_355_p2 );

    SC_METHOD(thread_tmp_35_fu_373_p2);
    sensitive << ( tmp_33_reg_470 );
    sensitive << ( tmp_34_reg_475 );

    SC_METHOD(thread_tmp_4_fu_251_p4);
    sensitive << ( lev1_to_int_fu_248_p1 );

    SC_METHOD(thread_tmp_5_fu_206_p4);
    sensitive << ( lev0_to_int_fu_203_p1 );

    SC_METHOD(thread_tmp_6_fu_261_p1);
    sensitive << ( lev1_to_int_fu_248_p1 );

    SC_METHOD(thread_tmp_8_fu_232_p2);
    sensitive << ( notrhs_fu_226_p2 );
    sensitive << ( notlhs_fu_220_p2 );

    SC_METHOD(thread_tmp_fu_216_p1);
    sensitive << ( lev0_to_int_fu_203_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in0_V_0_vld_out );
    sensitive << ( in1_V_0_vld_out );
    sensitive << ( in2_V_0_vld_out );
    sensitive << ( in3_V_0_vld_out );
    sensitive << ( out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_reg_423 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( or_cond1_reg_442 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_cond2_reg_461 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_reg_480 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const4);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000000000000001";
    in0_V_0_sel_rd = SC_LOGIC_0;
    in0_V_0_sel_wr = SC_LOGIC_0;
    in0_V_0_state = "00";
    in1_V_0_sel_rd = SC_LOGIC_0;
    in1_V_0_sel_wr = SC_LOGIC_0;
    in1_V_0_state = "00";
    in2_V_0_sel_rd = SC_LOGIC_0;
    in2_V_0_sel_wr = SC_LOGIC_0;
    in2_V_0_state = "00";
    in3_V_0_sel_rd = SC_LOGIC_0;
    in3_V_0_sel_wr = SC_LOGIC_0;
    in3_V_0_state = "00";
    out_V_1_sel_rd = SC_LOGIC_0;
    out_V_1_sel_wr = SC_LOGIC_0;
    out_V_1_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_codeRepl1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, lev0, "(port)lev0");
    sc_trace(mVcdFile, in0_V_TDATA, "(port)in0_V_TDATA");
    sc_trace(mVcdFile, in0_V_TVALID, "(port)in0_V_TVALID");
    sc_trace(mVcdFile, in0_V_TREADY, "(port)in0_V_TREADY");
    sc_trace(mVcdFile, lev1, "(port)lev1");
    sc_trace(mVcdFile, in1_V_TDATA, "(port)in1_V_TDATA");
    sc_trace(mVcdFile, in1_V_TVALID, "(port)in1_V_TVALID");
    sc_trace(mVcdFile, in1_V_TREADY, "(port)in1_V_TREADY");
    sc_trace(mVcdFile, lev2, "(port)lev2");
    sc_trace(mVcdFile, in2_V_TDATA, "(port)in2_V_TDATA");
    sc_trace(mVcdFile, in2_V_TVALID, "(port)in2_V_TVALID");
    sc_trace(mVcdFile, in2_V_TREADY, "(port)in2_V_TREADY");
    sc_trace(mVcdFile, lev3, "(port)lev3");
    sc_trace(mVcdFile, in3_V_TDATA, "(port)in3_V_TDATA");
    sc_trace(mVcdFile, in3_V_TVALID, "(port)in3_V_TVALID");
    sc_trace(mVcdFile, in3_V_TREADY, "(port)in3_V_TREADY");
    sc_trace(mVcdFile, out_V_TDATA, "(port)out_V_TDATA");
    sc_trace(mVcdFile, out_V_TVALID, "(port)out_V_TVALID");
    sc_trace(mVcdFile, out_V_TREADY, "(port)out_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in0_V_0_data_out, "in0_V_0_data_out");
    sc_trace(mVcdFile, in0_V_0_vld_in, "in0_V_0_vld_in");
    sc_trace(mVcdFile, in0_V_0_vld_out, "in0_V_0_vld_out");
    sc_trace(mVcdFile, in0_V_0_ack_in, "in0_V_0_ack_in");
    sc_trace(mVcdFile, in0_V_0_ack_out, "in0_V_0_ack_out");
    sc_trace(mVcdFile, in0_V_0_payload_A, "in0_V_0_payload_A");
    sc_trace(mVcdFile, in0_V_0_payload_B, "in0_V_0_payload_B");
    sc_trace(mVcdFile, in0_V_0_sel_rd, "in0_V_0_sel_rd");
    sc_trace(mVcdFile, in0_V_0_sel_wr, "in0_V_0_sel_wr");
    sc_trace(mVcdFile, in0_V_0_sel, "in0_V_0_sel");
    sc_trace(mVcdFile, in0_V_0_load_A, "in0_V_0_load_A");
    sc_trace(mVcdFile, in0_V_0_load_B, "in0_V_0_load_B");
    sc_trace(mVcdFile, in0_V_0_state, "in0_V_0_state");
    sc_trace(mVcdFile, in0_V_0_state_cmp_full, "in0_V_0_state_cmp_full");
    sc_trace(mVcdFile, in1_V_0_data_out, "in1_V_0_data_out");
    sc_trace(mVcdFile, in1_V_0_vld_in, "in1_V_0_vld_in");
    sc_trace(mVcdFile, in1_V_0_vld_out, "in1_V_0_vld_out");
    sc_trace(mVcdFile, in1_V_0_ack_in, "in1_V_0_ack_in");
    sc_trace(mVcdFile, in1_V_0_ack_out, "in1_V_0_ack_out");
    sc_trace(mVcdFile, in1_V_0_payload_A, "in1_V_0_payload_A");
    sc_trace(mVcdFile, in1_V_0_payload_B, "in1_V_0_payload_B");
    sc_trace(mVcdFile, in1_V_0_sel_rd, "in1_V_0_sel_rd");
    sc_trace(mVcdFile, in1_V_0_sel_wr, "in1_V_0_sel_wr");
    sc_trace(mVcdFile, in1_V_0_sel, "in1_V_0_sel");
    sc_trace(mVcdFile, in1_V_0_load_A, "in1_V_0_load_A");
    sc_trace(mVcdFile, in1_V_0_load_B, "in1_V_0_load_B");
    sc_trace(mVcdFile, in1_V_0_state, "in1_V_0_state");
    sc_trace(mVcdFile, in1_V_0_state_cmp_full, "in1_V_0_state_cmp_full");
    sc_trace(mVcdFile, in2_V_0_data_out, "in2_V_0_data_out");
    sc_trace(mVcdFile, in2_V_0_vld_in, "in2_V_0_vld_in");
    sc_trace(mVcdFile, in2_V_0_vld_out, "in2_V_0_vld_out");
    sc_trace(mVcdFile, in2_V_0_ack_in, "in2_V_0_ack_in");
    sc_trace(mVcdFile, in2_V_0_ack_out, "in2_V_0_ack_out");
    sc_trace(mVcdFile, in2_V_0_payload_A, "in2_V_0_payload_A");
    sc_trace(mVcdFile, in2_V_0_payload_B, "in2_V_0_payload_B");
    sc_trace(mVcdFile, in2_V_0_sel_rd, "in2_V_0_sel_rd");
    sc_trace(mVcdFile, in2_V_0_sel_wr, "in2_V_0_sel_wr");
    sc_trace(mVcdFile, in2_V_0_sel, "in2_V_0_sel");
    sc_trace(mVcdFile, in2_V_0_load_A, "in2_V_0_load_A");
    sc_trace(mVcdFile, in2_V_0_load_B, "in2_V_0_load_B");
    sc_trace(mVcdFile, in2_V_0_state, "in2_V_0_state");
    sc_trace(mVcdFile, in2_V_0_state_cmp_full, "in2_V_0_state_cmp_full");
    sc_trace(mVcdFile, in3_V_0_data_out, "in3_V_0_data_out");
    sc_trace(mVcdFile, in3_V_0_vld_in, "in3_V_0_vld_in");
    sc_trace(mVcdFile, in3_V_0_vld_out, "in3_V_0_vld_out");
    sc_trace(mVcdFile, in3_V_0_ack_in, "in3_V_0_ack_in");
    sc_trace(mVcdFile, in3_V_0_ack_out, "in3_V_0_ack_out");
    sc_trace(mVcdFile, in3_V_0_payload_A, "in3_V_0_payload_A");
    sc_trace(mVcdFile, in3_V_0_payload_B, "in3_V_0_payload_B");
    sc_trace(mVcdFile, in3_V_0_sel_rd, "in3_V_0_sel_rd");
    sc_trace(mVcdFile, in3_V_0_sel_wr, "in3_V_0_sel_wr");
    sc_trace(mVcdFile, in3_V_0_sel, "in3_V_0_sel");
    sc_trace(mVcdFile, in3_V_0_load_A, "in3_V_0_load_A");
    sc_trace(mVcdFile, in3_V_0_load_B, "in3_V_0_load_B");
    sc_trace(mVcdFile, in3_V_0_state, "in3_V_0_state");
    sc_trace(mVcdFile, in3_V_0_state_cmp_full, "in3_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_V_1_data_out, "out_V_1_data_out");
    sc_trace(mVcdFile, out_V_1_vld_in, "out_V_1_vld_in");
    sc_trace(mVcdFile, out_V_1_vld_out, "out_V_1_vld_out");
    sc_trace(mVcdFile, out_V_1_ack_in, "out_V_1_ack_in");
    sc_trace(mVcdFile, out_V_1_ack_out, "out_V_1_ack_out");
    sc_trace(mVcdFile, out_V_1_payload_A, "out_V_1_payload_A");
    sc_trace(mVcdFile, out_V_1_payload_B, "out_V_1_payload_B");
    sc_trace(mVcdFile, out_V_1_sel_rd, "out_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_1_sel_wr, "out_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_1_sel, "out_V_1_sel");
    sc_trace(mVcdFile, out_V_1_load_A, "out_V_1_load_A");
    sc_trace(mVcdFile, out_V_1_load_B, "out_V_1_load_B");
    sc_trace(mVcdFile, out_V_1_state, "out_V_1_state");
    sc_trace(mVcdFile, out_V_1_state_cmp_full, "out_V_1_state_cmp_full");
    sc_trace(mVcdFile, in0_V_TDATA_blk_n, "in0_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, or_cond_reg_423, "or_cond_reg_423");
    sc_trace(mVcdFile, in1_V_TDATA_blk_n, "in1_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, or_cond1_reg_442, "or_cond1_reg_442");
    sc_trace(mVcdFile, in2_V_TDATA_blk_n, "in2_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, or_cond2_reg_461, "or_cond2_reg_461");
    sc_trace(mVcdFile, in3_V_TDATA_blk_n, "in3_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, or_cond3_reg_480, "or_cond3_reg_480");
    sc_trace(mVcdFile, out_V_TDATA_blk_n, "out_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, reg_197, "reg_197");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, grp_fu_185_p2, "grp_fu_185_p2");
    sc_trace(mVcdFile, tmp_9_reg_389, "tmp_9_reg_389");
    sc_trace(mVcdFile, grp_fu_191_p2, "grp_fu_191_p2");
    sc_trace(mVcdFile, tmp_1_reg_394, "tmp_1_reg_394");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, or_cond_fu_242_p2, "or_cond_fu_242_p2");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_12_reg_432, "tmp_12_reg_432");
    sc_trace(mVcdFile, tmp_13_reg_437, "tmp_13_reg_437");
    sc_trace(mVcdFile, or_cond1_fu_287_p2, "or_cond1_fu_287_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, tmp_26_reg_451, "tmp_26_reg_451");
    sc_trace(mVcdFile, tmp_27_reg_456, "tmp_27_reg_456");
    sc_trace(mVcdFile, or_cond2_fu_332_p2, "or_cond2_fu_332_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, tmp_33_reg_470, "tmp_33_reg_470");
    sc_trace(mVcdFile, tmp_34_reg_475, "tmp_34_reg_475");
    sc_trace(mVcdFile, or_cond3_fu_377_p2, "or_cond3_fu_377_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_165_p2, "grp_fu_165_p2");
    sc_trace(mVcdFile, tmp_15_reg_484, "tmp_15_reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_170_p2, "grp_fu_170_p2");
    sc_trace(mVcdFile, tmp_16_reg_489, "tmp_16_reg_489");
    sc_trace(mVcdFile, grp_fu_175_p2, "grp_fu_175_p2");
    sc_trace(mVcdFile, tmp_18_reg_494, "tmp_18_reg_494");
    sc_trace(mVcdFile, grp_fu_180_p2, "grp_fu_180_p2");
    sc_trace(mVcdFile, tmp_19_reg_499, "tmp_19_reg_499");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, tmp_20_reg_504, "tmp_20_reg_504");
    sc_trace(mVcdFile, tmp_7_reg_107, "tmp_7_reg_107");
    sc_trace(mVcdFile, tmp_s_reg_119, "tmp_s_reg_119");
    sc_trace(mVcdFile, tmp_10_reg_131, "tmp_10_reg_131");
    sc_trace(mVcdFile, tmp_14_phi_fu_147_p4, "tmp_14_phi_fu_147_p4");
    sc_trace(mVcdFile, tmp_14_reg_143, "tmp_14_reg_143");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, grp_fu_156_p0, "grp_fu_156_p0");
    sc_trace(mVcdFile, grp_fu_156_p1, "grp_fu_156_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_185_p0, "grp_fu_185_p0");
    sc_trace(mVcdFile, grp_fu_191_p0, "grp_fu_191_p0");
    sc_trace(mVcdFile, lev0_to_int_fu_203_p1, "lev0_to_int_fu_203_p1");
    sc_trace(mVcdFile, tmp_5_fu_206_p4, "tmp_5_fu_206_p4");
    sc_trace(mVcdFile, tmp_fu_216_p1, "tmp_fu_216_p1");
    sc_trace(mVcdFile, notrhs_fu_226_p2, "notrhs_fu_226_p2");
    sc_trace(mVcdFile, notlhs_fu_220_p2, "notlhs_fu_220_p2");
    sc_trace(mVcdFile, tmp_8_fu_232_p2, "tmp_8_fu_232_p2");
    sc_trace(mVcdFile, tmp_2_fu_238_p2, "tmp_2_fu_238_p2");
    sc_trace(mVcdFile, lev1_to_int_fu_248_p1, "lev1_to_int_fu_248_p1");
    sc_trace(mVcdFile, tmp_4_fu_251_p4, "tmp_4_fu_251_p4");
    sc_trace(mVcdFile, tmp_6_fu_261_p1, "tmp_6_fu_261_p1");
    sc_trace(mVcdFile, notrhs2_fu_271_p2, "notrhs2_fu_271_p2");
    sc_trace(mVcdFile, notlhs2_fu_265_p2, "notlhs2_fu_265_p2");
    sc_trace(mVcdFile, tmp_11_fu_277_p2, "tmp_11_fu_277_p2");
    sc_trace(mVcdFile, tmp_21_fu_283_p2, "tmp_21_fu_283_p2");
    sc_trace(mVcdFile, lev2_to_int_fu_293_p1, "lev2_to_int_fu_293_p1");
    sc_trace(mVcdFile, tmp_23_fu_296_p4, "tmp_23_fu_296_p4");
    sc_trace(mVcdFile, tmp_24_fu_306_p1, "tmp_24_fu_306_p1");
    sc_trace(mVcdFile, notrhs4_fu_316_p2, "notrhs4_fu_316_p2");
    sc_trace(mVcdFile, notlhs4_fu_310_p2, "notlhs4_fu_310_p2");
    sc_trace(mVcdFile, tmp_25_fu_322_p2, "tmp_25_fu_322_p2");
    sc_trace(mVcdFile, tmp_28_fu_328_p2, "tmp_28_fu_328_p2");
    sc_trace(mVcdFile, lev3_to_int_fu_338_p1, "lev3_to_int_fu_338_p1");
    sc_trace(mVcdFile, tmp_30_fu_341_p4, "tmp_30_fu_341_p4");
    sc_trace(mVcdFile, tmp_31_fu_351_p1, "tmp_31_fu_351_p1");
    sc_trace(mVcdFile, notrhs6_fu_361_p2, "notrhs6_fu_361_p2");
    sc_trace(mVcdFile, notlhs6_fu_355_p2, "notlhs6_fu_355_p2");
    sc_trace(mVcdFile, tmp_32_fu_367_p2, "tmp_32_fu_367_p2");
    sc_trace(mVcdFile, tmp_35_fu_373_p2, "tmp_35_fu_373_p2");
    sc_trace(mVcdFile, grp_fu_156_ce, "grp_fu_156_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_165_ce, "grp_fu_165_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_170_ce, "grp_fu_170_ce");
    sc_trace(mVcdFile, grp_fu_175_ce, "grp_fu_175_ce");
    sc_trace(mVcdFile, grp_fu_180_ce, "grp_fu_180_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Block_codeRepl1_proc::~Block_codeRepl1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete mixer_fadd_32ns_3bkb_U1;
    delete mixer_fadd_32ns_3bkb_U2;
    delete mixer_fmul_32ns_3cud_U3;
    delete mixer_fmul_32ns_3cud_U4;
    delete mixer_fmul_32ns_3cud_U5;
    delete mixer_fmul_32ns_3cud_U6;
    delete mixer_fcmp_32ns_3dEe_U7;
    delete mixer_fcmp_32ns_3dEe_U8;
}

void Block_codeRepl1_proc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Block_codeRepl1_proc::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_BD4CCCCD;
}

void Block_codeRepl1_proc::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_3D4CCCCD;
}

void Block_codeRepl1_proc::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void Block_codeRepl1_proc::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv5_2;
}

void Block_codeRepl1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                    esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in0_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_vld_out.read()))) {
            in0_V_0_sel_rd =  (sc_logic) (~in0_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in0_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_ack_in.read()))) {
            in0_V_0_sel_wr =  (sc_logic) (~in0_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in0_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_2)))) {
            in0_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_1)))) {
            in0_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in0_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_ack_out.read()))))) {
            in0_V_0_state = ap_const_lv2_3;
        } else {
            in0_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in1_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_vld_out.read()))) {
            in1_V_0_sel_rd =  (sc_logic) (~in1_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in1_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_ack_in.read()))) {
            in1_V_0_sel_wr =  (sc_logic) (~in1_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in1_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in1_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in1_V_0_state.read())))) {
            in1_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in1_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in1_V_0_state.read())))) {
            in1_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in1_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in1_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in1_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_ack_out.read()))))) {
            in1_V_0_state = ap_const_lv2_3;
        } else {
            in1_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in2_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_vld_out.read()))) {
            in2_V_0_sel_rd =  (sc_logic) (~in2_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in2_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_ack_in.read()))) {
            in2_V_0_sel_wr =  (sc_logic) (~in2_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in2_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in2_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in2_V_0_state.read())))) {
            in2_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in2_V_0_state.read())))) {
            in2_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in2_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in2_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_ack_out.read()))))) {
            in2_V_0_state = ap_const_lv2_3;
        } else {
            in2_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in3_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_vld_out.read()))) {
            in3_V_0_sel_rd =  (sc_logic) (~in3_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in3_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_ack_in.read()))) {
            in3_V_0_sel_wr =  (sc_logic) (~in3_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in3_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in3_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in3_V_0_state.read())))) {
            in3_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in3_V_0_state.read())))) {
            in3_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in3_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in3_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_ack_out.read()))))) {
            in3_V_0_state = ap_const_lv2_3;
        } else {
            in3_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_vld_out.read()))) {
            out_V_1_sel_rd =  (sc_logic) (~out_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_ack_in.read()))) {
            out_V_1_sel_wr =  (sc_logic) (~out_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_1_state.read())))) {
            out_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_1_state.read())))) {
            out_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_ack_out.read()))))) {
            out_V_1_state = ap_const_lv2_3;
        } else {
            out_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_332_p2.read()))) {
        tmp_10_reg_131 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_out.read())))) {
        tmp_10_reg_131 = in2_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond3_fu_377_p2.read()))) {
        tmp_14_reg_143 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read())))) {
        tmp_14_reg_143 = in3_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_242_p2.read()))) {
        tmp_7_reg_107 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_out.read())))) {
        tmp_7_reg_107 = in0_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_287_p2.read()))) {
        tmp_s_reg_119 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_out.read())))) {
        tmp_s_reg_119 = in1_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_load_A.read())) {
        in0_V_0_payload_A = in0_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_load_B.read())) {
        in0_V_0_payload_B = in0_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_load_A.read())) {
        in1_V_0_payload_A = in1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_load_B.read())) {
        in1_V_0_payload_B = in1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_load_A.read())) {
        in2_V_0_payload_A = in2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_load_B.read())) {
        in2_V_0_payload_B = in2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_load_A.read())) {
        in3_V_0_payload_A = in3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_load_B.read())) {
        in3_V_0_payload_B = in3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        or_cond1_reg_442 = or_cond1_fu_287_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        or_cond2_reg_461 = or_cond2_fu_332_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        or_cond3_reg_480 = or_cond3_fu_377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        or_cond_reg_423 = or_cond_fu_242_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_load_A.read())) {
        out_V_1_payload_A = grp_fu_156_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_load_B.read())) {
        out_V_1_payload_B = grp_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
  esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1)))) {
        reg_197 = grp_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_out.read())))) {
        tmp_12_reg_432 = grp_fu_185_p2.read();
        tmp_13_reg_437 = grp_fu_191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_15_reg_484 = grp_fu_165_p2.read();
        tmp_16_reg_489 = grp_fu_170_p2.read();
        tmp_18_reg_494 = grp_fu_175_p2.read();
        tmp_19_reg_499 = grp_fu_180_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        tmp_1_reg_394 = grp_fu_191_p2.read();
        tmp_9_reg_389 = grp_fu_185_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_20_reg_504 = grp_fu_160_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_out.read())))) {
        tmp_26_reg_451 = grp_fu_185_p2.read();
        tmp_27_reg_456 = grp_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_out.read())))) {
        tmp_33_reg_470 = grp_fu_185_p2.read();
        tmp_34_reg_475 = grp_fu_191_p2.read();
    }
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Block_codeRepl1_proc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Block_codeRepl1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Block_codeRepl1_proc::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_out.read()));
}

void Block_codeRepl1_proc::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_out.read()));
}

void Block_codeRepl1_proc::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_out.read()));
}

void Block_codeRepl1_proc::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read()));
}

void Block_codeRepl1_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_codeRepl1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_grp_fu_156_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        grp_fu_156_ce = ap_const_logic_1;
    } else {
        grp_fu_156_ce = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_grp_fu_156_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_156_p0 = reg_197.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_156_p0 = tmp_15_reg_484.read();
    } else {
        grp_fu_156_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Block_codeRepl1_proc::thread_grp_fu_156_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_156_p1 = tmp_20_reg_504.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_156_p1 = tmp_16_reg_489.read();
    } else {
        grp_fu_156_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Block_codeRepl1_proc::thread_grp_fu_165_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_165_ce = ap_const_logic_1;
    } else {
        grp_fu_165_ce = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_grp_fu_170_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_170_ce = ap_const_logic_1;
    } else {
        grp_fu_170_ce = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_grp_fu_175_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_175_ce = ap_const_logic_1;
    } else {
        grp_fu_175_ce = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_grp_fu_180_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_180_ce = ap_const_logic_1;
    } else {
        grp_fu_180_ce = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_grp_fu_185_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_185_p0 = lev3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_185_p0 = lev2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_185_p0 = lev1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_185_p0 = lev0.read();
    } else {
        grp_fu_185_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Block_codeRepl1_proc::thread_grp_fu_191_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_191_p0 = lev3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_191_p0 = lev2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_191_p0 = lev1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_191_p0 = lev0.read();
    } else {
        grp_fu_191_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Block_codeRepl1_proc::thread_in0_V_0_ack_in() {
    in0_V_0_ack_in = in0_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in0_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_out.read())))) {
        in0_V_0_ack_out = ap_const_logic_1;
    } else {
        in0_V_0_ack_out = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_in0_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in0_V_0_sel.read())) {
        in0_V_0_data_out = in0_V_0_payload_B.read();
    } else {
        in0_V_0_data_out = in0_V_0_payload_A.read();
    }
}

void Block_codeRepl1_proc::thread_in0_V_0_load_A() {
    in0_V_0_load_A = (in0_V_0_state_cmp_full.read() & ~in0_V_0_sel_wr.read());
}

void Block_codeRepl1_proc::thread_in0_V_0_load_B() {
    in0_V_0_load_B = (in0_V_0_sel_wr.read() & in0_V_0_state_cmp_full.read());
}

void Block_codeRepl1_proc::thread_in0_V_0_sel() {
    in0_V_0_sel = in0_V_0_sel_rd.read();
}

void Block_codeRepl1_proc::thread_in0_V_0_state_cmp_full() {
    in0_V_0_state_cmp_full =  (sc_logic) ((!in0_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in0_V_0_state.read() != ap_const_lv2_1))[0];
}

void Block_codeRepl1_proc::thread_in0_V_0_vld_in() {
    in0_V_0_vld_in = in0_V_TVALID.read();
}

void Block_codeRepl1_proc::thread_in0_V_0_vld_out() {
    in0_V_0_vld_out = in0_V_0_state.read()[0];
}

void Block_codeRepl1_proc::thread_in0_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()))) {
        in0_V_TDATA_blk_n = in0_V_0_state.read()[0];
    } else {
        in0_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl1_proc::thread_in0_V_TREADY() {
    in0_V_TREADY = in0_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in1_V_0_ack_in() {
    in1_V_0_ack_in = in1_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_out.read())))) {
        in1_V_0_ack_out = ap_const_logic_1;
    } else {
        in1_V_0_ack_out = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_in1_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in1_V_0_sel.read())) {
        in1_V_0_data_out = in1_V_0_payload_B.read();
    } else {
        in1_V_0_data_out = in1_V_0_payload_A.read();
    }
}

void Block_codeRepl1_proc::thread_in1_V_0_load_A() {
    in1_V_0_load_A = (in1_V_0_state_cmp_full.read() & ~in1_V_0_sel_wr.read());
}

void Block_codeRepl1_proc::thread_in1_V_0_load_B() {
    in1_V_0_load_B = (in1_V_0_sel_wr.read() & in1_V_0_state_cmp_full.read());
}

void Block_codeRepl1_proc::thread_in1_V_0_sel() {
    in1_V_0_sel = in1_V_0_sel_rd.read();
}

void Block_codeRepl1_proc::thread_in1_V_0_state_cmp_full() {
    in1_V_0_state_cmp_full =  (sc_logic) ((!in1_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in1_V_0_state.read() != ap_const_lv2_1))[0];
}

void Block_codeRepl1_proc::thread_in1_V_0_vld_in() {
    in1_V_0_vld_in = in1_V_TVALID.read();
}

void Block_codeRepl1_proc::thread_in1_V_0_vld_out() {
    in1_V_0_vld_out = in1_V_0_state.read()[0];
}

void Block_codeRepl1_proc::thread_in1_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()))) {
        in1_V_TDATA_blk_n = in1_V_0_state.read()[0];
    } else {
        in1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl1_proc::thread_in1_V_TREADY() {
    in1_V_TREADY = in1_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in2_V_0_ack_in() {
    in2_V_0_ack_in = in2_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_out.read())))) {
        in2_V_0_ack_out = ap_const_logic_1;
    } else {
        in2_V_0_ack_out = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_in2_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in2_V_0_sel.read())) {
        in2_V_0_data_out = in2_V_0_payload_B.read();
    } else {
        in2_V_0_data_out = in2_V_0_payload_A.read();
    }
}

void Block_codeRepl1_proc::thread_in2_V_0_load_A() {
    in2_V_0_load_A = (in2_V_0_state_cmp_full.read() & ~in2_V_0_sel_wr.read());
}

void Block_codeRepl1_proc::thread_in2_V_0_load_B() {
    in2_V_0_load_B = (in2_V_0_sel_wr.read() & in2_V_0_state_cmp_full.read());
}

void Block_codeRepl1_proc::thread_in2_V_0_sel() {
    in2_V_0_sel = in2_V_0_sel_rd.read();
}

void Block_codeRepl1_proc::thread_in2_V_0_state_cmp_full() {
    in2_V_0_state_cmp_full =  (sc_logic) ((!in2_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in2_V_0_state.read() != ap_const_lv2_1))[0];
}

void Block_codeRepl1_proc::thread_in2_V_0_vld_in() {
    in2_V_0_vld_in = in2_V_TVALID.read();
}

void Block_codeRepl1_proc::thread_in2_V_0_vld_out() {
    in2_V_0_vld_out = in2_V_0_state.read()[0];
}

void Block_codeRepl1_proc::thread_in2_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()))) {
        in2_V_TDATA_blk_n = in2_V_0_state.read()[0];
    } else {
        in2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl1_proc::thread_in2_V_TREADY() {
    in2_V_TREADY = in2_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in3_V_0_ack_in() {
    in3_V_0_ack_in = in3_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_in3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read())))) {
        in3_V_0_ack_out = ap_const_logic_1;
    } else {
        in3_V_0_ack_out = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_in3_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in3_V_0_sel.read())) {
        in3_V_0_data_out = in3_V_0_payload_B.read();
    } else {
        in3_V_0_data_out = in3_V_0_payload_A.read();
    }
}

void Block_codeRepl1_proc::thread_in3_V_0_load_A() {
    in3_V_0_load_A = (in3_V_0_state_cmp_full.read() & ~in3_V_0_sel_wr.read());
}

void Block_codeRepl1_proc::thread_in3_V_0_load_B() {
    in3_V_0_load_B = (in3_V_0_sel_wr.read() & in3_V_0_state_cmp_full.read());
}

void Block_codeRepl1_proc::thread_in3_V_0_sel() {
    in3_V_0_sel = in3_V_0_sel_rd.read();
}

void Block_codeRepl1_proc::thread_in3_V_0_state_cmp_full() {
    in3_V_0_state_cmp_full =  (sc_logic) ((!in3_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in3_V_0_state.read() != ap_const_lv2_1))[0];
}

void Block_codeRepl1_proc::thread_in3_V_0_vld_in() {
    in3_V_0_vld_in = in3_V_TVALID.read();
}

void Block_codeRepl1_proc::thread_in3_V_0_vld_out() {
    in3_V_0_vld_out = in3_V_0_state.read()[0];
}

void Block_codeRepl1_proc::thread_in3_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()))) {
        in3_V_TDATA_blk_n = in3_V_0_state.read()[0];
    } else {
        in3_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl1_proc::thread_in3_V_TREADY() {
    in3_V_TREADY = in3_V_0_state.read()[1];
}

void Block_codeRepl1_proc::thread_lev0_to_int_fu_203_p1() {
    lev0_to_int_fu_203_p1 = lev0.read();
}

void Block_codeRepl1_proc::thread_lev1_to_int_fu_248_p1() {
    lev1_to_int_fu_248_p1 = lev1.read();
}

void Block_codeRepl1_proc::thread_lev2_to_int_fu_293_p1() {
    lev2_to_int_fu_293_p1 = lev2.read();
}

void Block_codeRepl1_proc::thread_lev3_to_int_fu_338_p1() {
    lev3_to_int_fu_338_p1 = lev3.read();
}

void Block_codeRepl1_proc::thread_notlhs2_fu_265_p2() {
    notlhs2_fu_265_p2 = (!tmp_4_fu_251_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_251_p4.read() != ap_const_lv8_FF);
}

void Block_codeRepl1_proc::thread_notlhs4_fu_310_p2() {
    notlhs4_fu_310_p2 = (!tmp_23_fu_296_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_23_fu_296_p4.read() != ap_const_lv8_FF);
}

void Block_codeRepl1_proc::thread_notlhs6_fu_355_p2() {
    notlhs6_fu_355_p2 = (!tmp_30_fu_341_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_30_fu_341_p4.read() != ap_const_lv8_FF);
}

void Block_codeRepl1_proc::thread_notlhs_fu_220_p2() {
    notlhs_fu_220_p2 = (!tmp_5_fu_206_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_206_p4.read() != ap_const_lv8_FF);
}

void Block_codeRepl1_proc::thread_notrhs2_fu_271_p2() {
    notrhs2_fu_271_p2 = (!tmp_6_fu_261_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_261_p1.read() == ap_const_lv23_0);
}

void Block_codeRepl1_proc::thread_notrhs4_fu_316_p2() {
    notrhs4_fu_316_p2 = (!tmp_24_fu_306_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_306_p1.read() == ap_const_lv23_0);
}

void Block_codeRepl1_proc::thread_notrhs6_fu_361_p2() {
    notrhs6_fu_361_p2 = (!tmp_31_fu_351_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_31_fu_351_p1.read() == ap_const_lv23_0);
}

void Block_codeRepl1_proc::thread_notrhs_fu_226_p2() {
    notrhs_fu_226_p2 = (!tmp_fu_216_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_216_p1.read() == ap_const_lv23_0);
}

void Block_codeRepl1_proc::thread_or_cond1_fu_287_p2() {
    or_cond1_fu_287_p2 = (tmp_11_fu_277_p2.read() & tmp_21_fu_283_p2.read());
}

void Block_codeRepl1_proc::thread_or_cond2_fu_332_p2() {
    or_cond2_fu_332_p2 = (tmp_25_fu_322_p2.read() & tmp_28_fu_328_p2.read());
}

void Block_codeRepl1_proc::thread_or_cond3_fu_377_p2() {
    or_cond3_fu_377_p2 = (tmp_32_fu_367_p2.read() & tmp_35_fu_373_p2.read());
}

void Block_codeRepl1_proc::thread_or_cond_fu_242_p2() {
    or_cond_fu_242_p2 = (tmp_8_fu_232_p2.read() & tmp_2_fu_238_p2.read());
}

void Block_codeRepl1_proc::thread_out_V_1_ack_in() {
    out_V_1_ack_in = out_V_1_state.read()[1];
}

void Block_codeRepl1_proc::thread_out_V_1_ack_out() {
    out_V_1_ack_out = out_V_TREADY.read();
}

void Block_codeRepl1_proc::thread_out_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_1_sel.read())) {
        out_V_1_data_out = out_V_1_payload_B.read();
    } else {
        out_V_1_data_out = out_V_1_payload_A.read();
    }
}

void Block_codeRepl1_proc::thread_out_V_1_load_A() {
    out_V_1_load_A = (out_V_1_state_cmp_full.read() & ~out_V_1_sel_wr.read());
}

void Block_codeRepl1_proc::thread_out_V_1_load_B() {
    out_V_1_load_B = (out_V_1_sel_wr.read() & out_V_1_state_cmp_full.read());
}

void Block_codeRepl1_proc::thread_out_V_1_sel() {
    out_V_1_sel = out_V_1_sel_rd.read();
}

void Block_codeRepl1_proc::thread_out_V_1_state_cmp_full() {
    out_V_1_state_cmp_full =  (sc_logic) ((!out_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_1_state.read() != ap_const_lv2_1))[0];
}

void Block_codeRepl1_proc::thread_out_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1))) {
        out_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_1_vld_in = ap_const_logic_0;
    }
}

void Block_codeRepl1_proc::thread_out_V_1_vld_out() {
    out_V_1_vld_out = out_V_1_state.read()[0];
}

void Block_codeRepl1_proc::thread_out_V_TDATA() {
    out_V_TDATA = out_V_1_data_out.read();
}

void Block_codeRepl1_proc::thread_out_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        out_V_TDATA_blk_n = out_V_1_state.read()[1];
    } else {
        out_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Block_codeRepl1_proc::thread_out_V_TVALID() {
    out_V_TVALID = out_V_1_state.read()[0];
}

void Block_codeRepl1_proc::thread_tmp_11_fu_277_p2() {
    tmp_11_fu_277_p2 = (notrhs2_fu_271_p2.read() | notlhs2_fu_265_p2.read());
}

void Block_codeRepl1_proc::thread_tmp_14_phi_fu_147_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()))) {
        tmp_14_phi_fu_147_p4 = in3_V_0_data_out.read();
    } else {
        tmp_14_phi_fu_147_p4 = tmp_14_reg_143.read();
    }
}

void Block_codeRepl1_proc::thread_tmp_21_fu_283_p2() {
    tmp_21_fu_283_p2 = (tmp_12_reg_432.read() | tmp_13_reg_437.read());
}

void Block_codeRepl1_proc::thread_tmp_23_fu_296_p4() {
    tmp_23_fu_296_p4 = lev2_to_int_fu_293_p1.read().range(30, 23);
}

void Block_codeRepl1_proc::thread_tmp_24_fu_306_p1() {
    tmp_24_fu_306_p1 = lev2_to_int_fu_293_p1.read().range(23-1, 0);
}

void Block_codeRepl1_proc::thread_tmp_25_fu_322_p2() {
    tmp_25_fu_322_p2 = (notrhs4_fu_316_p2.read() | notlhs4_fu_310_p2.read());
}

void Block_codeRepl1_proc::thread_tmp_28_fu_328_p2() {
    tmp_28_fu_328_p2 = (tmp_26_reg_451.read() | tmp_27_reg_456.read());
}

void Block_codeRepl1_proc::thread_tmp_2_fu_238_p2() {
    tmp_2_fu_238_p2 = (tmp_9_reg_389.read() | tmp_1_reg_394.read());
}

void Block_codeRepl1_proc::thread_tmp_30_fu_341_p4() {
    tmp_30_fu_341_p4 = lev3_to_int_fu_338_p1.read().range(30, 23);
}

void Block_codeRepl1_proc::thread_tmp_31_fu_351_p1() {
    tmp_31_fu_351_p1 = lev3_to_int_fu_338_p1.read().range(23-1, 0);
}

void Block_codeRepl1_proc::thread_tmp_32_fu_367_p2() {
    tmp_32_fu_367_p2 = (notrhs6_fu_361_p2.read() | notlhs6_fu_355_p2.read());
}

void Block_codeRepl1_proc::thread_tmp_35_fu_373_p2() {
    tmp_35_fu_373_p2 = (tmp_33_reg_470.read() | tmp_34_reg_475.read());
}

void Block_codeRepl1_proc::thread_tmp_4_fu_251_p4() {
    tmp_4_fu_251_p4 = lev1_to_int_fu_248_p1.read().range(30, 23);
}

void Block_codeRepl1_proc::thread_tmp_5_fu_206_p4() {
    tmp_5_fu_206_p4 = lev0_to_int_fu_203_p1.read().range(30, 23);
}

void Block_codeRepl1_proc::thread_tmp_6_fu_261_p1() {
    tmp_6_fu_261_p1 = lev1_to_int_fu_248_p1.read().range(23-1, 0);
}

void Block_codeRepl1_proc::thread_tmp_8_fu_232_p2() {
    tmp_8_fu_232_p2 = (notrhs_fu_226_p2.read() | notlhs_fu_220_p2.read());
}

void Block_codeRepl1_proc::thread_tmp_fu_216_p1() {
    tmp_fu_216_p1 = lev0_to_int_fu_203_p1.read().range(23-1, 0);
}

void Block_codeRepl1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_423.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in0_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_442.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_461.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in2_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_480.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in3_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

